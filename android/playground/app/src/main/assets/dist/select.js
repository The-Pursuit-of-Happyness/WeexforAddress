/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	var __weex_template__ = __webpack_require__(118)
	var __weex_style__ = __webpack_require__(119)
	var __weex_script__ = __webpack_require__(120)
	
	__weex_define__('@weex-component/407e2f0a6e2b00d5937ad1e98646d238', [], function(__weex_require__, __weex_exports__, __weex_module__) {
	
	    __weex_script__(__weex_module__, __weex_exports__, __weex_require__)
	    if (__weex_exports__.__esModule && __weex_exports__.default) {
	      __weex_module__.exports = __weex_exports__.default
	    }
	
	    __weex_module__.exports.template = __weex_template__
	
	    __weex_module__.exports.style = __weex_style__
	
	})
	
	__weex_bootstrap__('@weex-component/407e2f0a6e2b00d5937ad1e98646d238',undefined,undefined)

/***/ },

/***/ 118:
/***/ function(module, exports) {

	module.exports = {
	  "type": "div",
	  "classList": [
	    "bottombox"
	  ],
	  "children": [
	    {
	      "type": "input",
	      "id": "input",
	      "attr": {
	        "type": "text",
	        "value": function () {return this.selectedmessage}
	      },
	      "events": {
	        "focus": "showlist",
	        "blur": "dispote"
	      },
	      "classList": [
	        "input"
	      ]
	    },
	    {
	      "type": "div",
	      "classList": [
	        "list"
	      ],
	      "shown": function () {return this.show},
	      "children": [
	        {
	          "type": "list",
	          "repeat": {
	            "expression": function () {return this.items},
	            "value": "item"
	          },
	          "children": [
	            {
	              "type": "cell",
	              "append": "tree",
	              "events": {
	                "click": "selectitem"
	              },
	              "children": [
	                {
	                  "type": "text",
	                  "id": "message",
	                  "attr": {
	                    "value": function () {return this.item.message}
	                  }
	                }
	              ]
	            }
	          ]
	        }
	      ]
	    }
	  ]
	}

/***/ },

/***/ 119:
/***/ function(module, exports) {

	module.exports = {
	  "bottombox": {
	    "position": "relative"
	  },
	  "input": {
	    "fontSize": 25,
	    "width": 150,
	    "height": 40,
	    "lineHeight": 40,
	    "marginRight": 15,
	    "borderWidth": 1,
	    "borderColor": "#000000"
	  },
	  "list": {
	    "position": "relative",
	    "top": 0,
	    "left": 0,
	    "height": 200,
	    "width": 150,
	    "backgroundColor": "#FF0000"
	  }
	}

/***/ },

/***/ 120:
/***/ function(module, exports) {

	module.exports = function(module, exports, __weex_require__){"use strict";
	
	module.exports = {
	    data: function () {return {
	        selectedmessage: "请选择",
	        show: false,
	        items: [{ message: "列表数据1" }, { message: "列表数据2" }, { message: "列表数据3" }, { message: "列表数据4" }, { message: "列表数据5" }]
	    }},
	    created: function created() {},
	    methods: {
	        showlist: function showlist() {
	            this.show = true;
	        },
	        selectitem: function selectitem(index) {
	            this.selectedmessage = index.target.children[0].attr.value;
	
	            this.show = false;
	        },
	        dispote: function dispote() {
	            this.show = false;
	        }
	
	    }
	};}
	/* generated by weex-loader */


/***/ }

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,